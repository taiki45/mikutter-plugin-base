{"name":"Mikutter-plugin-base","tagline":"Add new way to write mikutter plugin.","body":"# MikutterPluginBase\r\n\r\nAdd new way to write mikutter plugin.\r\n\r\n## Installation\r\n\r\nAdd this line to your mikutter's Gemfile:\r\n\r\n    gem 'mikutter_plugin_base'\r\n\r\nAnd then execute:\r\n\r\n    $ bundle\r\n\r\nOr install it yourself as:\r\n\r\n    $ gem install mikutter_plugin_base\r\n\r\nFinally execute mikkuter with bundled gems:\r\n\r\n    $ bundle exec ruby mikkuter.rb\r\n\r\n## Usage\r\n\r\n```ruby\r\n# path/to/mikutter/plugin/dir/sample.rb\r\nrequire 'mikutter_plugin_base'\r\n\r\nclass Sample < Mikutter::PluginBase\r\n  def run(plugin)\r\n    \"write your code here.\"\r\n    \"you can access mikutter plugin api via `plugin`.\"\r\n  end\r\n\r\n  def on_update(service, messages)\r\n    \"define mikutter event callbacks, hooks, filters as method.\"\r\n    \"plugin base will automatically add them.\"\r\n  end\r\nend\r\n\r\n# at last of your plugin script do `resister!`\r\nSample.register!\r\n```\r\n\r\n## Contributing\r\n\r\n1. Fork it\r\n2. Create your feature branch (`git checkout -b my-new-feature`)\r\n3. Commit your changes (`git commit -am 'Add some feature'`)\r\n4. Push to the branch (`git push origin my-new-feature`)\r\n5. Create new Pull Request\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}